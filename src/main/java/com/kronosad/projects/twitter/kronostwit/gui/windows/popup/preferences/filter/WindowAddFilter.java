/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kronosad.projects.twitter.kronostwit.gui.windows.popup.preferences.filter;

import com.kronosad.projects.twitter.kronostwit.console.ConsoleLoader;
import com.kronosad.projects.twitter.kronostwit.gui.windows.Window;
import com.kronosad.projects.twitter.kronostwit.gui.windows.WindowViewTimeline;
import com.kronosad.projects.twitter.kronostwit.gui.windows.popup.preferences.Preferences;
import java.util.ArrayList;

/**
 *
 * @author russjr08
 */
public class WindowAddFilter extends Window {
    
    private WindowPreferenceFilters filterWindow;
    
    /**
     * Creates new form WindowAddFilter
     */
    public WindowAddFilter(WindowPreferenceFilters filterWindow) {
        super("Add Filter", 500, 500);
        this.filterWindow = filterWindow;
        
        initComponents();
        
        super.init();
        
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFilter = new javax.swing.JTextField();
        boxUsername = new javax.swing.JCheckBox();
        btnConfirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Filter:");

        boxUsername.setText("Is Username?");

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(jLabel1))
                            .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(txtFilter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 213, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(boxUsername))
                        .add(0, 48, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(btnConfirm)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtFilter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(boxUsername)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(btnConfirm)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        
        filterWindow.filters.addElement(this.txtFilter.getText());

        
        ArrayList<Filter> filters = Preferences.getFilters();
        
        filters.add(new Filter(this.txtFilter.getText(), boxUsername.isSelected()));
        
        Preferences.serializeFilters(filters);
        
        for(Window window : ConsoleLoader.windows){
            if(window instanceof WindowViewTimeline){
                WindowViewTimeline timelineView = (WindowViewTimeline)window;
                for(int i = 0; i < timelineView.getStatuses().size(); i++){
                    if(!boxUsername.isSelected()){
                        if(timelineView.getStatuses().get(i).getText().toLowerCase().contains(txtFilter.getText())){

                            timelineView.getStatuses().remove(i);
                            timelineView.getTweetList().removeElementAt(i);

                        }
                    }else{
                        if(timelineView.getStatuses().get(i).getUser().getScreenName().equalsIgnoreCase(txtFilter.getText())){
                            
                            timelineView.getStatuses().remove(i);
                            timelineView.getTweetList().removeElementAt(i);
                            
                        }
                    }
                }
            }
        }
        
        this.dispose();
        
    }//GEN-LAST:event_btnConfirmActionPerformed

    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox boxUsername;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables
}
